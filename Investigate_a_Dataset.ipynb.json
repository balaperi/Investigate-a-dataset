{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> **Tip**: Welcome to the Investigate a Dataset project! You will find tips in quoted sections like this to help organize your approach to your investigation. Before submitting your project, it will be a good idea to go back through your report and remove these sections to make the presentation of your work as tidy as possible. First things first, you might want to double-click this Markdown cell and change the title so that it reflects your dataset and investigation.\n",
    "\n",
    "# Project: Predict Show/No Show Medical Appointments\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='intro'></a>\n",
    "## Introduction\n",
    " This dataset has information from 100k medical appointments in Brazil.\n",
    " I am considering 3 features age,neighbourhood,scholarship,hypertension to see the NoShow results.\n",
    " ####  Question 1:  whether or not patients show up for their appointment.\n",
    " ####  Question 2:  Whether female /male patients showed up most/not?\n",
    " ####  Question 3:  Which age patients showed up most?\n",
    " ####  Question 4:  Which Neighbourhood patients showed up most/not?\n",
    " ####  Question 5:  Whether Scholarship patients showed up most/not?\n",
    " ####  Question 6:  Whether Hypertension patients showed up most/not? \n",
    " ####  Question 7:  Whether SMSReceived patients showed up most/not?\n",
    " \n",
    " \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#  set up import statements for all of the packages \n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime\n",
    "from time import strftime\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "## Data Wrangling\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n",
    "\n",
    "### General Properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "\n",
       "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
       "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
       "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
       "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
       "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
       "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
       "\n",
       "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
       "0         0           0        0             0      No  \n",
       "1         0           0        0             0      No  \n",
       "2         0           0        0             0      No  \n",
       "3         0           0        0             0      No  \n",
       "4         1           0        0             0      No  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load your data and print out a few lines. Perform operations to inspect data\n",
    "#   types and look for instances of missing or possibly errant data.\n",
    "\n",
    "#load data to dataframe\n",
    "\n",
    "df_noshow=pd.read_csv(\"KaggleV2-May-2016.csv\")\n",
    "df_noshow.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(110527, 14)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get the number of rows and columns\n",
    "df_noshow.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 110527 entries, 0 to 110526\n",
      "Data columns (total 14 columns):\n",
      "PatientId         110527 non-null float64\n",
      "AppointmentID     110527 non-null int64\n",
      "Gender            110527 non-null object\n",
      "ScheduledDay      110527 non-null object\n",
      "AppointmentDay    110527 non-null object\n",
      "Age               110527 non-null int64\n",
      "Neighbourhood     110527 non-null object\n",
      "Scholarship       110527 non-null int64\n",
      "Hipertension      110527 non-null int64\n",
      "Diabetes          110527 non-null int64\n",
      "Alcoholism        110527 non-null int64\n",
      "Handcap           110527 non-null int64\n",
      "SMS_received      110527 non-null int64\n",
      "No-show           110527 non-null object\n",
      "dtypes: float64(1), int64(8), object(5)\n",
      "memory usage: 11.8+ MB\n"
     ]
    }
   ],
   "source": [
    "#get the dataset details\n",
    "df_noshow.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### There are no null values "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Cleaning (Converting data types,dropping few columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# convert patientid to int\n",
    "df_noshow['PatientId']=df_noshow['PatientId'].astype(int)\n",
    "\n",
    "# convert ScheduledDay  and AppointmentDay to datetime\n",
    "\n",
    "df_noshow['ScheduledDay']=pd.to_datetime(df_noshow['ScheduledDay']).dt.date.astype('datetime64[ns]')\n",
    "df_noshow['AppointmentDay']=pd.to_datetime(df_noshow['AppointmentDay']).dt.date.astype('datetime64[ns]')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#rename the columns \n",
    "\n",
    "df_noshow.rename(columns={'Hipertension':'Hypertension','Handcap':'Handicap','SMS_received':'SMSReceived','No-show':'NoShow'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29872499824296</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>558997776694438</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4262962299951</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>867951213174</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8841186448183</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         PatientId  AppointmentID Gender ScheduledDay AppointmentDay  Age  \\\n",
       "0   29872499824296        5642903      F   2016-04-29     2016-04-29   62   \n",
       "1  558997776694438        5642503      M   2016-04-29     2016-04-29   56   \n",
       "2    4262962299951        5642549      F   2016-04-29     2016-04-29   62   \n",
       "3     867951213174        5642828      F   2016-04-29     2016-04-29    8   \n",
       "4    8841186448183        5642494      F   2016-04-29     2016-04-29   56   \n",
       "\n",
       "       Neighbourhood  Scholarship  Hypertension  Diabetes  Alcoholism  \\\n",
       "0    JARDIM DA PENHA            0             1         0           0   \n",
       "1    JARDIM DA PENHA            0             0         0           0   \n",
       "2      MATA DA PRAIA            0             0         0           0   \n",
       "3  PONTAL DE CAMBURI            0             0         0           0   \n",
       "4    JARDIM DA PENHA            0             1         1           0   \n",
       "\n",
       "   Handicap  SMSReceived NoShow  \n",
       "0         0            0     No  \n",
       "1         0            0     No  \n",
       "2         0            0     No  \n",
       "3         0            0     No  \n",
       "4         0            0     No  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "######  Drop the patientId and AppointmentID columns as they are system generated and not useful for analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop patientid and appointmentid\n",
    "\n",
    "df_noshow.drop(['PatientId','AppointmentID'],axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['F', 'M'], dtype=object)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find unique values in each columns\n",
    "\n",
    "df_noshow['Gender'].unique() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow['Scholarship'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 0])"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow['Hypertension'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow['Diabetes'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow['Alcoholism'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2, 3, 4])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow['Handicap'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow['SMSReceived'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### columns from the above has 0 or 1 values.Convert  the other columns to object."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "#convert the columns to object\n",
    "df_noshow['Scholarship'] = df_noshow['Scholarship'].astype(object)\n",
    "df_noshow['Hypertension'] = df_noshow['Hypertension'].astype(object)\n",
    "df_noshow['Diabetes'] = df_noshow['Diabetes'].astype(object)\n",
    "df_noshow['Alcoholism'] = df_noshow['Alcoholism'].astype(object)\n",
    "df_noshow['Handicap'] = df_noshow['Handicap'].astype(object)\n",
    "df_noshow['SMSReceived'] = df_noshow['SMSReceived'].astype(object)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 110527 entries, 0 to 110526\n",
      "Data columns (total 12 columns):\n",
      "Gender            110527 non-null object\n",
      "ScheduledDay      110527 non-null datetime64[ns]\n",
      "AppointmentDay    110527 non-null datetime64[ns]\n",
      "Age               110527 non-null int64\n",
      "Neighbourhood     110527 non-null object\n",
      "Scholarship       110527 non-null object\n",
      "Hypertension      110527 non-null object\n",
      "Diabetes          110527 non-null object\n",
      "Alcoholism        110527 non-null object\n",
      "Handicap          110527 non-null object\n",
      "SMSReceived       110527 non-null object\n",
      "NoShow            110527 non-null object\n",
      "dtypes: datetime64[ns](2), int64(1), object(9)\n",
      "memory usage: 10.1+ MB\n"
     ]
    }
   ],
   "source": [
    "df_noshow.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender ScheduledDay AppointmentDay  Age      Neighbourhood Scholarship  \\\n",
       "0      F   2016-04-29     2016-04-29   62    JARDIM DA PENHA           0   \n",
       "1      M   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "2      F   2016-04-29     2016-04-29   62      MATA DA PRAIA           0   \n",
       "3      F   2016-04-29     2016-04-29    8  PONTAL DE CAMBURI           0   \n",
       "4      F   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "\n",
       "  Hypertension Diabetes Alcoholism Handicap SMSReceived NoShow  \n",
       "0            1        0          0        0           0     No  \n",
       "1            0        0          0        0           0     No  \n",
       "2            0        0          0        0           0     No  \n",
       "3            0        0          0        0           0     No  \n",
       "4            1        1          0        0           0     No  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#print few rows\n",
    "\n",
    "df_noshow.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 62,  56,   8,  76,  23,  39,  21,  19,  30,  29,  22,  28,  54,\n",
       "        15,  50,  40,  46,   4,  13,  65,  45,  51,  32,  12,  61,  38,\n",
       "        79,  18,  63,  64,  85,  59,  55,  71,  49,  78,  31,  58,  27,\n",
       "         6,   2,  11,   7,   0,   3,   1,  69,  68,  60,  67,  36,  10,\n",
       "        35,  20,  26,  34,  33,  16,  42,   5,  47,  17,  41,  44,  37,\n",
       "        24,  66,  77,  81,  70,  53,  75,  73,  52,  74,  43,  89,  57,\n",
       "        14,   9,  48,  83,  72,  25,  80,  87,  88,  84,  82,  90,  94,\n",
       "        86,  91,  98,  92,  96,  93,  95,  97, 102, 115, 100,  99,  -1])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check for unqiue age\n",
    "df_noshow['Age'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### *The above data for Age contains 0,-1 .Lets get those rows of data*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-27</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>SÃO BENEDITO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-25</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>ILHA DAS CAIEIRAS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-27</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>NOVA PALESTINA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>MONTE BELO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>BONFIM</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-28</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>SANTO ANTÔNIO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-08</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>PRAIA DO SUÁ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>ITARARÉ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>NOVA PALESTINA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-03-31</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>NOVA PALESTINA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-01</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>REDENÇÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>CARATOÍRA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-27</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>ARIOVALDO FAVALESSA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>292</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>GURIGICA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>305</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>JOANA D´ARC</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>306</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>SANTA MARTHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>SANTA MARTHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-03-31</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>CONSOLAÇÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>359</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-06</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>CONSOLAÇÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>366</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-03-31</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>CONSOLAÇÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-03-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>434</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-03-31</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>MORADA DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>524</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-03-18</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>ITARARÉ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>525</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-01</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>ITARARÉ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>526</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>ITARARÉ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>565</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-15</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>0</td>\n",
       "      <td>SANTA LUÍZA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109629</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-04</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>ROMÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109633</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-04</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>ROMÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109646</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-04</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>FORTE SÃO JOÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109647</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-12</td>\n",
       "      <td>2016-06-08</td>\n",
       "      <td>0</td>\n",
       "      <td>FORTE SÃO JOÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109649</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-04</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>FORTE SÃO JOÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109650</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-12</td>\n",
       "      <td>2016-06-08</td>\n",
       "      <td>0</td>\n",
       "      <td>FORTE SÃO JOÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109830</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-25</td>\n",
       "      <td>2016-06-02</td>\n",
       "      <td>0</td>\n",
       "      <td>SÃO BENEDITO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109847</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-11</td>\n",
       "      <td>2016-06-02</td>\n",
       "      <td>0</td>\n",
       "      <td>NOVA PALESTINA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109848</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-17</td>\n",
       "      <td>2016-06-02</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109852</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-24</td>\n",
       "      <td>2016-06-02</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110231</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-28</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110235</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-28</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110236</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-06</td>\n",
       "      <td>2016-06-08</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110299</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-30</td>\n",
       "      <td>2016-06-07</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110313</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-19</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110319</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110320</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-09</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110321</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-02-11</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110331</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-02-24</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110334</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110335</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-02-11</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110339</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-14</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110341</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-18</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110342</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>2016-06-08</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110343</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-12</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110345</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-16</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110346</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>2016-06-08</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110454</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-03</td>\n",
       "      <td>2016-06-03</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110460</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-03</td>\n",
       "      <td>2016-06-03</td>\n",
       "      <td>0</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110507</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08</td>\n",
       "      <td>2016-06-08</td>\n",
       "      <td>0</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3539 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Gender ScheduledDay AppointmentDay  Age        Neighbourhood  \\\n",
       "59          F   2016-04-29     2016-04-29    0            CONQUISTA   \n",
       "63          M   2016-04-27     2016-04-29    0         SÃO BENEDITO   \n",
       "64          M   2016-04-25     2016-04-29    0    ILHA DAS CAIEIRAS   \n",
       "65          M   2016-04-27     2016-04-29    0            CONQUISTA   \n",
       "67          F   2016-04-29     2016-04-29    0       NOVA PALESTINA   \n",
       "89          M   2016-04-29     2016-04-29    0           MONTE BELO   \n",
       "101         M   2016-04-29     2016-04-29    0               BONFIM   \n",
       "104         F   2016-04-28     2016-04-29    0        SANTO ANTÔNIO   \n",
       "132         M   2016-04-08     2016-04-29    0         PRAIA DO SUÁ   \n",
       "150         M   2016-04-29     2016-04-29    0              ITARARÉ   \n",
       "188         M   2016-04-29     2016-04-29    0       NOVA PALESTINA   \n",
       "192         M   2016-04-29     2016-04-29    0            CONQUISTA   \n",
       "193         F   2016-03-31     2016-04-29    0       NOVA PALESTINA   \n",
       "194         M   2016-04-01     2016-04-29    0             REDENÇÃO   \n",
       "250         M   2016-04-29     2016-04-29    0            CARATOÍRA   \n",
       "256         F   2016-04-27     2016-04-29    0  ARIOVALDO FAVALESSA   \n",
       "266         M   2016-04-29     2016-04-29    0          MARIA ORTIZ   \n",
       "292         F   2016-04-29     2016-04-29    0             GURIGICA   \n",
       "305         F   2016-04-29     2016-04-29    0          JOANA D´ARC   \n",
       "306         M   2016-04-29     2016-04-29    0         SANTA MARTHA   \n",
       "310         M   2016-04-29     2016-04-29    0         SANTA MARTHA   \n",
       "358         F   2016-03-31     2016-04-29    0           CONSOLAÇÃO   \n",
       "359         M   2016-04-06     2016-04-29    0           CONSOLAÇÃO   \n",
       "366         F   2016-03-31     2016-04-29    0           CONSOLAÇÃO   \n",
       "377         M   2016-03-29     2016-04-29    0             DA PENHA   \n",
       "434         F   2016-03-31     2016-04-29    0    MORADA DE CAMBURI   \n",
       "524         M   2016-03-18     2016-04-29    0              ITARARÉ   \n",
       "525         F   2016-04-01     2016-04-29    0              ITARARÉ   \n",
       "526         M   2016-04-29     2016-04-29    0              ITARARÉ   \n",
       "565         F   2016-04-15     2016-04-29    0          SANTA LUÍZA   \n",
       "...       ...          ...            ...  ...                  ...   \n",
       "109629      F   2016-05-04     2016-06-01    0                ROMÃO   \n",
       "109633      F   2016-05-04     2016-06-01    0                ROMÃO   \n",
       "109646      M   2016-05-04     2016-06-01    0       FORTE SÃO JOÃO   \n",
       "109647      M   2016-05-12     2016-06-08    0       FORTE SÃO JOÃO   \n",
       "109649      M   2016-05-04     2016-06-01    0       FORTE SÃO JOÃO   \n",
       "109650      M   2016-05-12     2016-06-08    0       FORTE SÃO JOÃO   \n",
       "109830      F   2016-05-25     2016-06-02    0         SÃO BENEDITO   \n",
       "109847      M   2016-05-11     2016-06-02    0       NOVA PALESTINA   \n",
       "109848      M   2016-05-17     2016-06-02    0          RESISTÊNCIA   \n",
       "109852      F   2016-05-24     2016-06-02    0          RESISTÊNCIA   \n",
       "110231      M   2016-04-28     2016-06-01    0          RESISTÊNCIA   \n",
       "110235      M   2016-04-28     2016-06-01    0          RESISTÊNCIA   \n",
       "110236      M   2016-05-06     2016-06-08    0          RESISTÊNCIA   \n",
       "110299      F   2016-05-30     2016-06-07    0          RESISTÊNCIA   \n",
       "110313      F   2016-04-19     2016-06-06    0          RESISTÊNCIA   \n",
       "110319      F   2016-04-29     2016-06-06    0          RESISTÊNCIA   \n",
       "110320      M   2016-05-09     2016-06-06    0          RESISTÊNCIA   \n",
       "110321      M   2016-02-11     2016-06-01    0          RESISTÊNCIA   \n",
       "110331      F   2016-02-24     2016-06-01    0          RESISTÊNCIA   \n",
       "110334      M   2016-06-01     2016-06-01    0          RESISTÊNCIA   \n",
       "110335      M   2016-02-11     2016-06-01    0          RESISTÊNCIA   \n",
       "110339      M   2016-04-14     2016-06-01    0          RESISTÊNCIA   \n",
       "110341      M   2016-05-18     2016-06-01    0          RESISTÊNCIA   \n",
       "110342      M   2016-06-06     2016-06-08    0          RESISTÊNCIA   \n",
       "110343      F   2016-05-12     2016-06-01    0          RESISTÊNCIA   \n",
       "110345      F   2016-05-16     2016-06-01    0          RESISTÊNCIA   \n",
       "110346      M   2016-06-06     2016-06-08    0          RESISTÊNCIA   \n",
       "110454      F   2016-06-03     2016-06-03    0          RESISTÊNCIA   \n",
       "110460      F   2016-06-03     2016-06-03    0          RESISTÊNCIA   \n",
       "110507      F   2016-06-08     2016-06-08    0          MARIA ORTIZ   \n",
       "\n",
       "       Scholarship Hypertension Diabetes Alcoholism Handicap SMSReceived  \\\n",
       "59               0            0        0          0        0           0   \n",
       "63               0            0        0          0        0           0   \n",
       "64               0            0        0          0        0           1   \n",
       "65               0            0        0          0        0           0   \n",
       "67               0            0        0          0        0           0   \n",
       "89               0            0        0          0        0           0   \n",
       "101              0            0        0          0        0           0   \n",
       "104              0            0        0          0        0           0   \n",
       "132              0            0        0          0        0           1   \n",
       "150              0            0        0          0        0           0   \n",
       "188              0            0        0          0        0           0   \n",
       "192              0            0        0          0        0           0   \n",
       "193              0            0        0          0        0           1   \n",
       "194              0            0        0          0        0           0   \n",
       "250              0            0        0          0        0           0   \n",
       "256              0            0        0          0        0           0   \n",
       "266              0            0        0          0        0           0   \n",
       "292              0            0        0          0        0           0   \n",
       "305              0            0        0          0        0           0   \n",
       "306              0            0        0          0        0           0   \n",
       "310              0            0        0          0        0           0   \n",
       "358              0            0        0          0        0           0   \n",
       "359              0            0        0          0        0           0   \n",
       "366              0            0        0          0        0           1   \n",
       "377              0            0        0          0        0           1   \n",
       "434              0            0        0          0        0           1   \n",
       "524              0            0        0          0        0           1   \n",
       "525              0            0        0          0        0           1   \n",
       "526              0            0        0          0        0           0   \n",
       "565              0            0        0          0        0           1   \n",
       "...            ...          ...      ...        ...      ...         ...   \n",
       "109629           0            0        0          0        0           0   \n",
       "109633           0            0        0          0        0           1   \n",
       "109646           0            0        0          0        0           0   \n",
       "109647           0            0        0          0        0           0   \n",
       "109649           0            0        0          0        0           0   \n",
       "109650           0            0        0          0        0           0   \n",
       "109830           0            0        0          0        0           0   \n",
       "109847           0            0        0          0        0           1   \n",
       "109848           0            0        0          0        0           0   \n",
       "109852           0            0        0          0        0           0   \n",
       "110231           0            0        0          0        0           0   \n",
       "110235           0            0        0          0        0           0   \n",
       "110236           0            0        0          0        0           1   \n",
       "110299           0            0        0          0        0           1   \n",
       "110313           0            0        0          0        0           1   \n",
       "110319           0            0        0          0        0           1   \n",
       "110320           0            0        0          0        0           1   \n",
       "110321           0            0        0          0        0           1   \n",
       "110331           0            0        0          0        0           1   \n",
       "110334           0            0        0          0        0           0   \n",
       "110335           0            0        0          0        0           1   \n",
       "110339           0            0        0          0        0           1   \n",
       "110341           0            0        0          0        0           1   \n",
       "110342           0            0        0          0        0           0   \n",
       "110343           0            0        0          0        0           1   \n",
       "110345           0            0        0          0        0           0   \n",
       "110346           0            0        0          0        0           0   \n",
       "110454           0            0        0          0        0           0   \n",
       "110460           0            0        0          0        0           0   \n",
       "110507           0            0        0          0        0           0   \n",
       "\n",
       "       NoShow  \n",
       "59         No  \n",
       "63         No  \n",
       "64         No  \n",
       "65         No  \n",
       "67         No  \n",
       "89         No  \n",
       "101        No  \n",
       "104       Yes  \n",
       "132       Yes  \n",
       "150        No  \n",
       "188        No  \n",
       "192        No  \n",
       "193        No  \n",
       "194        No  \n",
       "250       Yes  \n",
       "256       Yes  \n",
       "266        No  \n",
       "292        No  \n",
       "305        No  \n",
       "306        No  \n",
       "310        No  \n",
       "358       Yes  \n",
       "359        No  \n",
       "366       Yes  \n",
       "377        No  \n",
       "434       Yes  \n",
       "524        No  \n",
       "525       Yes  \n",
       "526        No  \n",
       "565        No  \n",
       "...       ...  \n",
       "109629    Yes  \n",
       "109633    Yes  \n",
       "109646     No  \n",
       "109647    Yes  \n",
       "109649     No  \n",
       "109650    Yes  \n",
       "109830    Yes  \n",
       "109847    Yes  \n",
       "109848     No  \n",
       "109852     No  \n",
       "110231     No  \n",
       "110235    Yes  \n",
       "110236     No  \n",
       "110299    Yes  \n",
       "110313     No  \n",
       "110319     No  \n",
       "110320     No  \n",
       "110321     No  \n",
       "110331    Yes  \n",
       "110334     No  \n",
       "110335     No  \n",
       "110339    Yes  \n",
       "110341     No  \n",
       "110342     No  \n",
       "110343     No  \n",
       "110345     No  \n",
       "110346     No  \n",
       "110454     No  \n",
       "110460     No  \n",
       "110507     No  \n",
       "\n",
       "[3539 rows x 12 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow.query('Age == \"0\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>99832</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>-1</td>\n",
       "      <td>ROMÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Gender ScheduledDay AppointmentDay  Age Neighbourhood Scholarship  \\\n",
       "99832      F   2016-06-06     2016-06-06   -1         ROMÃO           0   \n",
       "\n",
       "      Hypertension Diabetes Alcoholism Handicap SMSReceived NoShow  \n",
       "99832            0        0          0        0           0     No  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow.query('Age == \"-1\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Assume the above age -1 as error and drop that row."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop the row containing age -1\n",
    "df_noshow.drop(99832,axis=0,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Gender, ScheduledDay, AppointmentDay, Age, Neighbourhood, Scholarship, Hypertension, Diabetes, Alcoholism, Handicap, SMSReceived, NoShow]\n",
       "Index: []"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check for the removal of the age -1 row\n",
    "df_noshow.query('Age == \"-1\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Assuming that age 0 are babies,lets check for the columns hypertension,diabetes,alcoholism to see our assumption is true."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Gender, ScheduledDay, AppointmentDay, Age, Neighbourhood, Scholarship, Hypertension, Diabetes, Alcoholism, Handicap, SMSReceived, NoShow]\n",
       "Index: []"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow.query('Age == \"0\" & (Hypertension == \"1\" | Diabetes == \"1\" | Alcoholism ==\"1\")')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The above result confirms that the rows with age 0 are babies."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2015-11-10', '2015-12-03', '2015-12-07', '2015-12-08',\n",
       "       '2015-12-14', '2015-12-15', '2016-01-04', '2016-01-05',\n",
       "       '2016-01-07', '2016-01-11', '2016-01-13', '2016-01-14',\n",
       "       '2016-01-19', '2016-01-20', '2016-01-21', '2016-01-22',\n",
       "       '2016-01-25', '2016-01-26', '2016-01-27', '2016-01-28',\n",
       "       '2016-01-29', '2016-02-01', '2016-02-02', '2016-02-03',\n",
       "       '2016-02-04', '2016-02-05', '2016-02-11', '2016-02-12',\n",
       "       '2016-02-15', '2016-02-16', '2016-02-17', '2016-02-18',\n",
       "       '2016-02-19', '2016-02-22', '2016-02-23', '2016-02-24',\n",
       "       '2016-02-25', '2016-02-26', '2016-02-29', '2016-03-01',\n",
       "       '2016-03-02', '2016-03-03', '2016-03-04', '2016-03-05',\n",
       "       '2016-03-07', '2016-03-08', '2016-03-09', '2016-03-10',\n",
       "       '2016-03-11', '2016-03-14', '2016-03-15', '2016-03-16',\n",
       "       '2016-03-17', '2016-03-18', '2016-03-19', '2016-03-21',\n",
       "       '2016-03-22', '2016-03-23', '2016-03-28', '2016-03-29',\n",
       "       '2016-03-30', '2016-03-31', '2016-04-01', '2016-04-05',\n",
       "       '2016-04-06', '2016-04-07', '2016-04-08', '2016-04-09',\n",
       "       '2016-04-11', '2016-04-12', '2016-04-13', '2016-04-14',\n",
       "       '2016-04-15', '2016-04-16', '2016-04-18', '2016-04-19',\n",
       "       '2016-04-20', '2016-04-25', '2016-04-26', '2016-04-27',\n",
       "       '2016-04-28', '2016-04-29', '2016-04-30', '2016-05-02',\n",
       "       '2016-05-03', '2016-05-04', '2016-05-05', '2016-05-06',\n",
       "       '2016-05-07', '2016-05-09', '2016-05-10', '2016-05-11',\n",
       "       '2016-05-12', '2016-05-13', '2016-05-14', '2016-05-16',\n",
       "       '2016-05-17', '2016-05-18', '2016-05-19', '2016-05-20',\n",
       "       '2016-05-24', '2016-05-25', '2016-05-30', '2016-05-31',\n",
       "       '2016-06-01', '2016-06-02', '2016-06-03', '2016-06-04',\n",
       "       '2016-06-06', '2016-06-07', '2016-06-08'], dtype=object)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check for unique scheduled day \n",
    "np.sort(df_noshow.ScheduledDay.dt.strftime('%Y-%m-%d').unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2016-04-29', '2016-05-02', '2016-05-03', '2016-05-04',\n",
       "       '2016-05-05', '2016-05-06', '2016-05-09', '2016-05-10',\n",
       "       '2016-05-11', '2016-05-12', '2016-05-13', '2016-05-14',\n",
       "       '2016-05-16', '2016-05-17', '2016-05-18', '2016-05-19',\n",
       "       '2016-05-20', '2016-05-24', '2016-05-25', '2016-05-30',\n",
       "       '2016-05-31', '2016-06-01', '2016-06-02', '2016-06-03',\n",
       "       '2016-06-06', '2016-06-07', '2016-06-08'], dtype=object)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.sort(df_noshow.AppointmentDay.dt.strftime('%Y-%m-%d').unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['AEROPORTO', 'ANDORINHAS', 'ANTÔNIO HONÓRIO', 'ARIOVALDO FAVALESSA',\n",
       "       'BARRO VERMELHO', 'BELA VISTA', 'BENTO FERREIRA', 'BOA VISTA',\n",
       "       'BONFIM', 'CARATOÍRA', 'CENTRO', 'COMDUSA', 'CONQUISTA',\n",
       "       'CONSOLAÇÃO', 'CRUZAMENTO', 'DA PENHA', 'DE LOURDES', 'DO CABRAL',\n",
       "       'DO MOSCOSO', 'DO QUADRO', 'ENSEADA DO SUÁ', 'ESTRELINHA',\n",
       "       'FONTE GRANDE', 'FORTE SÃO JOÃO', 'FRADINHOS', 'GOIABEIRAS',\n",
       "       'GRANDE VITÓRIA', 'GURIGICA', 'HORTO', 'ILHA DAS CAIEIRAS',\n",
       "       'ILHA DE SANTA MARIA', 'ILHA DO BOI', 'ILHA DO FRADE',\n",
       "       'ILHA DO PRÍNCIPE', 'ILHAS OCEÂNICAS DE TRINDADE', 'INHANGUETÁ',\n",
       "       'ITARARÉ', 'JABOUR', 'JARDIM CAMBURI', 'JARDIM DA PENHA',\n",
       "       'JESUS DE NAZARETH', 'JOANA D´ARC', 'JUCUTUQUARA', 'MARIA ORTIZ',\n",
       "       'MARUÍPE', 'MATA DA PRAIA', 'MONTE BELO', 'MORADA DE CAMBURI',\n",
       "       'MÁRIO CYPRESTE', 'NAZARETH', 'NOVA PALESTINA', 'PARQUE INDUSTRIAL',\n",
       "       'PARQUE MOSCOSO', 'PIEDADE', 'PONTAL DE CAMBURI', 'PRAIA DO CANTO',\n",
       "       'PRAIA DO SUÁ', 'REDENÇÃO', 'REPÚBLICA', 'RESISTÊNCIA', 'ROMÃO',\n",
       "       'SANTA CECÍLIA', 'SANTA CLARA', 'SANTA HELENA', 'SANTA LUÍZA',\n",
       "       'SANTA LÚCIA', 'SANTA MARTHA', 'SANTA TEREZA', 'SANTO ANDRÉ',\n",
       "       'SANTO ANTÔNIO', 'SANTOS DUMONT', 'SANTOS REIS', 'SEGURANÇA DO LAR',\n",
       "       'SOLON BORGES', 'SÃO BENEDITO', 'SÃO CRISTÓVÃO', 'SÃO JOSÉ',\n",
       "       'SÃO PEDRO', 'TABUAZEIRO', 'UNIVERSITÁRIO', 'VILA RUBIM'], dtype=object)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#print unqiue Neighbourhood values\n",
    "np.sort(df_noshow['Neighbourhood'].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### find day of the week from scheduledday and appointmentday to find if there are any noshows in weekends and also which day has the most appointments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender ScheduledDay AppointmentDay  Age      Neighbourhood Scholarship  \\\n",
       "0      F   2016-04-29     2016-04-29   62    JARDIM DA PENHA           0   \n",
       "1      M   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "2      F   2016-04-29     2016-04-29   62      MATA DA PRAIA           0   \n",
       "3      F   2016-04-29     2016-04-29    8  PONTAL DE CAMBURI           0   \n",
       "4      F   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "\n",
       "  Hypertension Diabetes Alcoholism Handicap SMSReceived NoShow Scheduled_DOW  \n",
       "0            1        0          0        0           0     No        Friday  \n",
       "1            0        0          0        0           0     No        Friday  \n",
       "2            0        0          0        0           0     No        Friday  \n",
       "3            0        0          0        0           0     No        Friday  \n",
       "4            1        1          0        0           0     No        Friday  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#day of the week\n",
    "df_noshow['Scheduled_DOW']=df_noshow['ScheduledDay'].dt.weekday_name\n",
    "df_noshow.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "      <th>Appointment_DOW</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender ScheduledDay AppointmentDay  Age      Neighbourhood Scholarship  \\\n",
       "0      F   2016-04-29     2016-04-29   62    JARDIM DA PENHA           0   \n",
       "1      M   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "2      F   2016-04-29     2016-04-29   62      MATA DA PRAIA           0   \n",
       "3      F   2016-04-29     2016-04-29    8  PONTAL DE CAMBURI           0   \n",
       "4      F   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "\n",
       "  Hypertension Diabetes Alcoholism Handicap SMSReceived NoShow Scheduled_DOW  \\\n",
       "0            1        0          0        0           0     No        Friday   \n",
       "1            0        0          0        0           0     No        Friday   \n",
       "2            0        0          0        0           0     No        Friday   \n",
       "3            0        0          0        0           0     No        Friday   \n",
       "4            1        1          0        0           0     No        Friday   \n",
       "\n",
       "  Appointment_DOW  \n",
       "0          Friday  \n",
       "1          Friday  \n",
       "2          Friday  \n",
       "3          Friday  \n",
       "4          Friday  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow['Appointment_DOW']=df_noshow['AppointmentDay'].dt.weekday_name\n",
    "df_noshow.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get the Waiting Time in Days of the Patients.\n",
    "df_noshow['Waiting_Time_days'] = df_noshow['AppointmentDay'] - df_noshow['ScheduledDay']\n",
    "df_noshow['Waiting_Time_days'] = df_noshow['Waiting_Time_days'].dt.days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "      <th>Appointment_DOW</th>\n",
       "      <th>Waiting_Time_days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-27</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>76</td>\n",
       "      <td>REPÚBLICA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-27</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>23</td>\n",
       "      <td>GOIABEIRAS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-27</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>39</td>\n",
       "      <td>GOIABEIRAS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>21</td>\n",
       "      <td>ANDORINHAS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-27</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>19</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender ScheduledDay AppointmentDay  Age      Neighbourhood Scholarship  \\\n",
       "0      F   2016-04-29     2016-04-29   62    JARDIM DA PENHA           0   \n",
       "1      M   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "2      F   2016-04-29     2016-04-29   62      MATA DA PRAIA           0   \n",
       "3      F   2016-04-29     2016-04-29    8  PONTAL DE CAMBURI           0   \n",
       "4      F   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "5      F   2016-04-27     2016-04-29   76          REPÚBLICA           0   \n",
       "6      F   2016-04-27     2016-04-29   23         GOIABEIRAS           0   \n",
       "7      F   2016-04-27     2016-04-29   39         GOIABEIRAS           0   \n",
       "8      F   2016-04-29     2016-04-29   21         ANDORINHAS           0   \n",
       "9      F   2016-04-27     2016-04-29   19          CONQUISTA           0   \n",
       "\n",
       "  Hypertension Diabetes Alcoholism Handicap SMSReceived NoShow Scheduled_DOW  \\\n",
       "0            1        0          0        0           0     No        Friday   \n",
       "1            0        0          0        0           0     No        Friday   \n",
       "2            0        0          0        0           0     No        Friday   \n",
       "3            0        0          0        0           0     No        Friday   \n",
       "4            1        1          0        0           0     No        Friday   \n",
       "5            1        0          0        0           0     No     Wednesday   \n",
       "6            0        0          0        0           0    Yes     Wednesday   \n",
       "7            0        0          0        0           0    Yes     Wednesday   \n",
       "8            0        0          0        0           0     No        Friday   \n",
       "9            0        0          0        0           0     No     Wednesday   \n",
       "\n",
       "  Appointment_DOW  Waiting_Time_days  \n",
       "0          Friday                  0  \n",
       "1          Friday                  0  \n",
       "2          Friday                  0  \n",
       "3          Friday                  0  \n",
       "4          Friday                  0  \n",
       "5          Friday                  2  \n",
       "6          Friday                  2  \n",
       "7          Friday                  2  \n",
       "8          Friday                  0  \n",
       "9          Friday                  2  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_noshow.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "      <th>Appointment_DOW</th>\n",
       "      <th>Waiting_Time_days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27033</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-10</td>\n",
       "      <td>2016-05-09</td>\n",
       "      <td>38</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>Monday</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55226</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-18</td>\n",
       "      <td>2016-05-17</td>\n",
       "      <td>19</td>\n",
       "      <td>SANTO ANTÔNIO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64175</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-05</td>\n",
       "      <td>2016-05-04</td>\n",
       "      <td>22</td>\n",
       "      <td>CONSOLAÇÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71533</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-11</td>\n",
       "      <td>2016-05-05</td>\n",
       "      <td>81</td>\n",
       "      <td>SANTO ANTÔNIO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>-6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72362</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-04</td>\n",
       "      <td>2016-05-03</td>\n",
       "      <td>7</td>\n",
       "      <td>TABUAZEIRO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Gender ScheduledDay AppointmentDay  Age  Neighbourhood Scholarship  \\\n",
       "27033      M   2016-05-10     2016-05-09   38    RESISTÊNCIA           0   \n",
       "55226      F   2016-05-18     2016-05-17   19  SANTO ANTÔNIO           0   \n",
       "64175      F   2016-05-05     2016-05-04   22     CONSOLAÇÃO           0   \n",
       "71533      F   2016-05-11     2016-05-05   81  SANTO ANTÔNIO           0   \n",
       "72362      M   2016-05-04     2016-05-03    7     TABUAZEIRO           0   \n",
       "\n",
       "      Hypertension Diabetes Alcoholism Handicap SMSReceived NoShow  \\\n",
       "27033            0        0          0        1           0    Yes   \n",
       "55226            0        0          0        1           0    Yes   \n",
       "64175            0        0          0        0           0    Yes   \n",
       "71533            0        0          0        0           0    Yes   \n",
       "72362            0        0          0        0           0    Yes   \n",
       "\n",
       "      Scheduled_DOW Appointment_DOW  Waiting_Time_days  \n",
       "27033       Tuesday          Monday                 -1  \n",
       "55226     Wednesday         Tuesday                 -1  \n",
       "64175      Thursday       Wednesday                 -1  \n",
       "71533     Wednesday        Thursday                 -6  \n",
       "72362     Wednesday         Tuesday                 -1  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check for wait days less than 0 that is appointment day  is after scheduled day \n",
    "df_noshow.query(\"Waiting_Time_days < 0 \")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### *The above result shows that the appointment day is later than Scheduledday*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NoShow\n",
       "No     88207\n",
       "Yes    22319\n",
       "Name: NoShow, dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get the count of noshow patients\n",
    "\n",
    "df_noshow.groupby(['NoShow'])['NoShow'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### *From the above results,around 80% of the people showed for the appointment and 20% didn't showup for the appointment.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "      <th>Appointment_DOW</th>\n",
       "      <th>Waiting_Time_days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>2016-04-29</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>Friday</td>\n",
       "      <td>Friday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender ScheduledDay AppointmentDay  Age      Neighbourhood Scholarship  \\\n",
       "0      F   2016-04-29     2016-04-29   62    JARDIM DA PENHA           0   \n",
       "1      M   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "2      F   2016-04-29     2016-04-29   62      MATA DA PRAIA           0   \n",
       "3      F   2016-04-29     2016-04-29    8  PONTAL DE CAMBURI           0   \n",
       "4      F   2016-04-29     2016-04-29   56    JARDIM DA PENHA           0   \n",
       "\n",
       "  Hypertension Diabetes Alcoholism Handicap SMSReceived NoShow Scheduled_DOW  \\\n",
       "0            1        0          0        0           0     No        Friday   \n",
       "1            0        0          0        0           0     No        Friday   \n",
       "2            0        0          0        0           0     No        Friday   \n",
       "3            0        0          0        0           0     No        Friday   \n",
       "4            1        1          0        0           0     No        Friday   \n",
       "\n",
       "  Appointment_DOW  Waiting_Time_days  \n",
       "0          Friday                  0  \n",
       "1          Friday                  0  \n",
       "2          Friday                  0  \n",
       "3          Friday                  0  \n",
       "4          Friday                  0  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#clean data for visualisation\n",
    "df_noshow.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "## Exploratory Data Analysis\n",
    "\n",
    "> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables.\n",
    "\n",
    "### Research Question 1 (Whether or not patient showed up for the appointments)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28cabcef0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_noshow['NoShow'].value_counts().plot(kind='bar')\n",
    "plt.title('Show/NoShow Patients')\n",
    "plt.xlabel('NoShow')\n",
    "plt.ylabel('Number Of Patients');\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### *The above plot shows that there are more patients who showed up for the appointments.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 2 (Whether female /male patients showed up most/not?)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28d5f80b8>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = sns.countplot(x=df_noshow.Gender, hue=df_noshow.NoShow, data=df_noshow)\n",
    "ax.set_title(\"Show/NoShow for Females and Males\")\n",
    "x_ticks_labels=['Female', 'Male']\n",
    "ax.set_xticklabels(x_ticks_labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### *Female patients took more appointments and  showed up  for the appointment more than the male patients.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 3 (Which age  patients showed up  most?)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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kiRJktRxjvAWEyZMYObMmZxxxhkrLbvnnnuYPn06O+ywA9OnT+fee+8F4L777mPKlCnP5dt+++2fe75kyRL2339/ttpqKz70oQ89l37hhRey/fbbs91223HiiScCcPHFF/OBD3wAgC984Qu8+MUvBuB3v/sde+yxR+dXVpIkSZLGAAPeGsceeywXXHABjz766Arps2bNYsaMGcyfP58jjjiC4447DoD3v//9vO51r+OAAw7gjDPO4JFHHnnuPfPmzeOiiy5iwYIFXHTRRSxatIglS5Zw4oknctVVVzFv3jxuvvlmvv/977PXXntx/fXXA3D99dez/vrr88c//pEbbriBPffcc+g6QJIkSZJ6iAFvjbXXXpsZM2Ywe/bsFdJvvPFGDj/8cACOPPJIbrjhBgCOPvpoFi5cyCGHHMI111zDbrvtxt/+9jcApk+fzjrrrMOkSZPYdtttueeee7j55pvZe++9mTx5MhMmTOCII47guuuuY6ONNuLxxx/nscceY9GiRRx++OFcd911XH/99Qa8kiRJkjRABrx13ve+93H22WfzxBNPNMxTezugTTbZhGOOOYZLL72UCRMmcNtttwHVOcF9xo8fz9NPP01mNizz1a9+Neeeey5bb701e+65J9dffz033ngju+++ewfWSpIkSZLGHgPeOuuttx6HHnooZ5999nNpr3nNa5gzZw4AF1xwwXPn1f7whz/kqaeeAuD+++/nwQcfZNNNN21Y9q677sq1117LsmXLeOaZZ7jwwgt57WtfC8Bee+3F6aefzl577cUrX/lKrr76alZffXXWWWedbq2qJEmSJPW0nr1K82CccMIJnHnmmc+9nj17NscccwynnXYakydP5txzzwXgxz/+MccffzyTJk0C4LTTTmOjjTZqWO7GG2/Mpz/9afbZZx8ykwMPPPC5KzzvueeeLFq0iL322ovx48ez2Wab8bKXvayLaylJkiRJvS2aTbMdraZNm5a5z3ErpH3zmFexzTbbDFOLumfhwoU9uV6SJEmS1EhE3JKZ01rlc0qzJEmSJKknGfBKkiRJknqSAa8kSZIkqScZ8EqSJEmSepIBryRJkiSpJxnwSpIkSZJ60pi9D+/OHzy/o+XdctqMlnkigg984AN87nOfA+D000/n8ccf5+STT+5oWyRJkiRJjvAOqdVXX51LLrmEZcuWDXdTJEmS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ljzPAr+vezxV/t5NzTYI/BfVF86LgPcD3+/736jJczXwqvL8pcDc8vz3wOlU/283lfdvUvO+m4ADgMOARcDBJX06cGN5finVl/IU4APAvwJbUR3E+beS50KqbWm3km9Kef4VqoNA9dtS7Ta1uGY9vwW8j+pL8/P1/5NU2+bnqH6U/RQ4E9gLOI1qW3+Maj/x5/L8MeCZvvT6/+9S1teptsMzgPNL+u01ef4HeHN5vjfVgbI/At8BHiptejOwWt02ex3wf8t2cBtwAtW2+07gqpLnXKr/uz2oDrKdArwe+AnV9tK0X0sZTfu2E/1a8jTt2070a3netG870a/uD7q+P2jat636teQfdN+26td+9gcD6ttW/dqpvm3Vr+1ss+30bat+bWebbadvW/VrO9tsO33bql/b+Q5zX9u9fS3uDwa8r60pb8PSZ6+k/PYe6IPqt/ROtHEQbaX3DqbikfigCsRe1E/6i4A7a17Pb/BYAPwNuKOfTv4h8HlgXkmrDQR/WZd/HlUQ+v7yT7NjSb+7Lt+vqIK09Sk70foyqY5YHV3zDzytZgO+mZWD4InAP1DtJJeWtNuogv51qXZMfUHhJKqAdQHL/0HXBW6pKe+2mufuHLrzY+HO2jLryr+z/H2GahbB1f08/kLZLmve91GqAGj9mn6t3Wbvrd9my99/Lv2/fc2y39c8v7X+Pf2U8WuWz0r4eV2eBf2UsyfVl+z9ZX1mtmhr3//Gr+rSby5/xwG/ru2/Bn37m9Kvd9dtS32v/7dvf1HznglUR8wvAVavaUvfukdZj6h5PR/4InA+NTv82n7t5/OZRzl411dG/fr0rW/dfq2vPWtRzeK4guoAy7nAfm1sB7+sX+faz7Gs88JW/VqzzTbs2070a3netG870a91fdNv33aiX9vYZt0fdG9/cGerfm2wnqvct636tVN926pf22hrW33biW22nb7txDbbTt92Ypttp287sM26r+3ivhb3B4PZ1+5INbCzkOogw09K+35OFRdsX54votoe160p76by98s1aXtQ/Ra/urznwEafXb+f56pkHg0PYH+qEboflA48q2xEd7HiiN+fyofxorrHVKrpwVdRgtSa90yg+kd/prz+BcunaIyrybdO3UY1hSpoPbOfjecPLN8p3U0JJKkC7Hk15X0d+F2p86mS91rgFdQF23XlP6/8fX95zz1U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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28cabc7f0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,4))\n",
    "plt.xticks(rotation=90)\n",
    "ax = sns.countplot(x=df_noshow.Age, hue=df_noshow.NoShow)\n",
    "ax.set_title(\"Show/NoShow of Appointments by Age\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### The above plot shows that for age 0 and 1 the noshow (Yes) is high compared to other ages.¶"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 4 (Which Neighbourhood patients showed up most/not?)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28c21b828>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plot by neighbourhood\n",
    "plt.figure(figsize=(16,4))\n",
    "plt.xticks(rotation=90)\n",
    "ax = sns.countplot(x=np.sort(df_noshow.Neighbourhood), hue=df_noshow.NoShow, order=df_noshow.Neighbourhood.value_counts().index)\n",
    "ax.set_title(\"Show/NoShow by Neighbourhood\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### *The above plot shows that most of the neighbourhood patients who took the appointments showed up for the appointments.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 5 (Whether Scholarship patients showed up most/not?)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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LmHAgKzjZdasWZVsYuEq2f11EvCPiFgUEe+TPRv708AeqTsMoIYNz42uJT1TOm1vCyzNx+vt01B8IxExIiJ6RESPjh3Lmr7GzGyLtWzZkqFDh3LjjTdutO3VV1+lb9++HHHEEfTt25f587OHmr722mvU1NSsL9e9e/f1ywsXLqRfv3507dqV731vw/PqbrvtNrp37063bt24/PLsidoTJkzg0ksvBeCmm27igAMOAOCll17is5/9bPEnm1QyqcwHekn6SBob6Qu8ADwEfDmVGQxMTMuT0jpp+4ORzcs/CTgj3R22P9njRp8GpgNd091krcgG8xt7VKmZ2VZ1wQUXcOutt7JixYoPxS+88EIGDRrEzJkzOfvss7nooosAuOSSSzjxxBPp378/N954I8uXL1+/z3PPPcf48eOZNWsW48ePZ8GCBSxcuJDLL7+cBx98kOeee47p06dz991306dPHx599FEAHn30Udq3b88///lPHnvsMXr37l2x863kmMpTZAPufwFmpWONAC4HLpU0j2zMZGTaZSTQPsUvBa5I9TxP9ozrF8iesX1BRKxL4y4XAvcBc4AJqayZ2TajTZs2DBo0iOHDh38o/sQTT3DWWWcBcM455/DYY48BcN555zFnzhwGDhzItGnT6NWrF2vWrAGgb9++tG3bltatW3P44Yfz6quvMn36dI4//ng6duxIy5YtOfvss3nkkUfYe++9WbVqFStXrmTBggWcddZZPPLIIzz66KPNM6kARMSwiDg0IrpFxDnpDq6XI6JnRBwUEQMjYk0q+25aPyhtfzlXz48j4sCIOCQi7snFJ0fEwWnbjyt5LmZmTfXtb3+bkSNH8vbbbzdYJn8777777suQIUOYOHEiLVu2ZPbs2UA2RlOnRYsWrF27lk09aPG4445j9OjRHHLIIfTu3ZtHH32UJ554gs985jMFnFVpnvvLzKzC2rVrx1e+8hVGjhy5PvbpT3+a22+/HYBbb711/TjHvffey/vvvw/A66+/zpIlS+jUqeEbW4899lgefvhhFi9ezLp167jtttv43Oc+B0CfPn244YYb6NOnD0cddRQPPfQQu+yyC23btq3UqXqaFjOzreGyyy7jV7/61fr14cOHM2TIEK6//no6duzI6NGjAbj//vu5+OKLad26NQDXX389e++9d4P17rPPPvzkJz/hhBNOICI4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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28bc8f6a0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = sns.countplot(x=df_noshow.Scholarship, hue=df_noshow.NoShow, data=df_noshow)\n",
    "ax.set_title(\"Show/NoShow for Scholarship\")\n",
    "x_ticks_labels=['No Scholarship', 'Scholarship']\n",
    "ax.set_xticklabels(x_ticks_labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "      <th>Appointment_DOW</th>\n",
       "      <th>Waiting_Time_days</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Scholarship</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "      <td>0.801926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "      <td>0.762637</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Gender  ScheduledDay  AppointmentDay       Age  Neighbourhood  \\\n",
       "Scholarship                                                                    \n",
       "0            0.801926      0.801926        0.801926  0.801926       0.801926   \n",
       "1            0.762637      0.762637        0.762637  0.762637       0.762637   \n",
       "\n",
       "             Hypertension  Diabetes  Alcoholism  Handicap  SMSReceived  \\\n",
       "Scholarship                                                              \n",
       "0                0.801926  0.801926    0.801926  0.801926     0.801926   \n",
       "1                0.762637  0.762637    0.762637  0.762637     0.762637   \n",
       "\n",
       "               NoShow  Scheduled_DOW  Appointment_DOW  Waiting_Time_days  \n",
       "Scholarship                                                               \n",
       "0            0.801926       0.801926         0.801926           0.801926  \n",
       "1            0.762637       0.762637         0.762637           0.762637  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_s_ratio = df_noshow.query('NoShow == \"No\"').groupby(['Scholarship']).count()/df_noshow.groupby(['Scholarship']).count()\n",
    "df_s_ratio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28baba1d0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#% of scholarship \n",
    "df_s_ratio = df_noshow.query('NoShow == \"No\"').groupby(['Scholarship']).count()/df_noshow.groupby(['Scholarship']).count()\n",
    "ax = sns.barplot(x=df_s_ratio.index, y=df_s_ratio.NoShow)\n",
    "ax.set_title(\"Show Percentage for Scholarship\")\n",
    "x_ticks_labels=['No Scholarship', 'Scholarship']\n",
    "ax.set_xticklabels(x_ticks_labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### *Around 80% of the people with no scholarship showed up for the appointments.Also around 76% of the people with scholarship showed up for the appointment.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 6 (Whether Hypertension patients showed up most/not?)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28ba30278>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=sns.countplot(x=df_noshow.Hypertension,hue=df_noshow.NoShow,data=df_noshow)\n",
    "ax.set_title(\"Show/NoShow for Hypertension\")\n",
    "x_ticks_labels=['No Hypertension', 'Hypertension']\n",
    "ax.set_xticklabels(x_ticks_labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMSReceived</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "      <th>Appointment_DOW</th>\n",
       "      <th>Waiting_Time_days</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hypertension</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "      <td>0.790961</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "      <td>0.826980</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Gender  ScheduledDay  AppointmentDay       Age  Neighbourhood  \\\n",
       "Hypertension                                                                    \n",
       "0             0.790961      0.790961        0.790961  0.790961       0.790961   \n",
       "1             0.826980      0.826980        0.826980  0.826980       0.826980   \n",
       "\n",
       "              Scholarship  Diabetes  Alcoholism  Handicap  SMSReceived  \\\n",
       "Hypertension                                                             \n",
       "0                0.790961  0.790961    0.790961  0.790961     0.790961   \n",
       "1                0.826980  0.826980    0.826980  0.826980     0.826980   \n",
       "\n",
       "                NoShow  Scheduled_DOW  Appointment_DOW  Waiting_Time_days  \n",
       "Hypertension                                                               \n",
       "0             0.790961       0.790961         0.790961           0.790961  \n",
       "1             0.826980       0.826980         0.826980           0.826980  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_h_ratio = df_noshow.query('NoShow == \"No\"').groupby(['Hypertension']).count()/df_noshow.groupby(['Hypertension']).count()\n",
    "df_h_ratio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28b9f04a8>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=sns.barplot(x=df_h_ratio.index,y=df_h_ratio.NoShow)\n",
    "ax.set_title(\"Show % for Hypertension\")\n",
    "x_ticks_labels=['No Hypertension', 'Hypertension']\n",
    "ax.set_xticklabels(x_ticks_labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### *The above plot shows that 79% of the patients with no hypertension showed for the appointment and around 82% of the patients with hypertension also turned up for the appointments.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 7 (Whether SMSReceived patients showed up most/not?)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28b9ac390>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=sns.countplot(x=df_noshow.SMSReceived,hue=df_noshow.NoShow,data=df_noshow)\n",
    "ax.set_title(\"Show/NoShow for SMSReceived\")\n",
    "x_ticks_labels=['No SMSReceived', 'SMSReceived']\n",
    "ax.set_xticklabels(x_ticks_labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>NoShow</th>\n",
       "      <th>Scheduled_DOW</th>\n",
       "      <th>Appointment_DOW</th>\n",
       "      <th>Waiting_Time_days</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SMSReceived</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "      <td>0.832965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "      <td>0.724255</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Gender  ScheduledDay  AppointmentDay       Age  Neighbourhood  \\\n",
       "SMSReceived                                                                    \n",
       "0            0.832965      0.832965        0.832965  0.832965       0.832965   \n",
       "1            0.724255      0.724255        0.724255  0.724255       0.724255   \n",
       "\n",
       "             Scholarship  Hypertension  Diabetes  Alcoholism  Handicap  \\\n",
       "SMSReceived                                                              \n",
       "0               0.832965      0.832965  0.832965    0.832965  0.832965   \n",
       "1               0.724255      0.724255  0.724255    0.724255  0.724255   \n",
       "\n",
       "               NoShow  Scheduled_DOW  Appointment_DOW  Waiting_Time_days  \n",
       "SMSReceived                                                               \n",
       "0            0.832965       0.832965         0.832965           0.832965  \n",
       "1            0.724255       0.724255         0.724255           0.724255  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sms_ratio = df_noshow.query('NoShow == \"No\"').groupby(['SMSReceived']).count()/df_noshow.groupby(['SMSReceived']).count()\n",
    "df_sms_ratio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff28b944518>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=sns.barplot(x=df_sms_ratio.index,y=df_sms_ratio.NoShow)\n",
    "ax.set_title(\"Show % for SMSReceived\")\n",
    "x_ticks_labels=['No SMSReceived', 'SMSReceived']\n",
    "ax.set_xticklabels(x_ticks_labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### *The above plot shows that 83% of the patients with no SMSReceived showed for the appointment and around 72% of the patients with SMSReceived also turned up for the appointments.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusions:\n",
    "1. There are more patients who showed up for the appointments irrespective of the features.\n",
    "2. Female patients took more number of appointments and also showed up for the appointment more than the male patients.\n",
    "3. For age 0 and 1 the noshow (Yes) is high compared to other ages.\n",
    "4. Most of the neighbourhood patients who took the appointments showed up for the appointments.\n",
    "5. More number of patients with No Scholarship showed up for the appointments compared to patients with scholarship patients.\n",
    "6. More number of patients with hypertension showed up for the appointments compared to patients with no hypertension.\n",
    "7. More Number of the patients with no SMSReceived showed for the appointment than the patients with SMSReceived.\n",
    "\n",
    "#### *Limitations:*\n",
    "1. The dataset is quite sufficient to come to a conclusion on the features to answer the patient show/noshow.\n",
    "\n",
    "### With the features that I chose, age,scholarship,hypertension,smsreceived can be good pick to answer whether patient show/noshow for the appointments."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='conclusions'></a>\n",
    "## Conclusions\n",
    "\n",
    "> **Tip**: Finally, summarize your findings and the results that have been performed. Make sure that you are clear with regards to the limitations of your exploration. If you haven't done any statistical tests, do not imply any statistical conclusions. And make sure you avoid implying causation from correlation!\n",
    "\n",
    "> **Tip**: Once you are satisfied with your work here, check over your report to make sure that it is satisfies all the areas of the rubric (found on the project submission page at the end of the lesson). You should also probably remove all of the \"Tips\" like this one so that the presentation is as polished as possible.\n",
    "\n",
    "## Submitting your Project \n",
    "\n",
    "> Before you submit your project, you need to create a .html or .pdf version of this notebook in the workspace here. To do that, run the code cell below. If it worked correctly, you should get a return code of 0, and you should see the generated .html file in the workspace directory (click on the orange Jupyter icon in the upper left).\n",
    "\n",
    "> Alternatively, you can download this report as .html via the **File** > **Download as** submenu, and then manually upload it into the workspace directory by clicking on the orange Jupyter icon in the upper left, then using the Upload button.\n",
    "\n",
    "> Once you've done this, you can submit your project by clicking on the \"Submit Project\" button in the lower right here. This will create and submit a zip file with this .ipynb doc and the .html or .pdf version you created. Congratulations!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from subprocess import call\n",
    "call(['python', '-m', 'nbconvert', 'Investigate_a_Dataset.ipynb'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
